// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('cmsApp').directive('timespaceDropzone', function($rootScope, $q, Media) {
    var isFileDrag;
    isFileDrag = function(event) {
      var type, _i, _len, _ref;
      if (!(event.dataTransfer && event.dataTransfer.types)) {
        return false;
      }
      _ref = event.dataTransfer.types;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        type = _ref[_i];
        if (type === "Files") {
          return true;
        }
      }
      return false;
    };
    return {
      restrict: 'E',
      replace: true,
      scope: {
        callback: "="
      },
      link: function(scope, element, attrs) {
        element.on("dragenter", function(event) {
          event.preventDefault();
          if (!isFileDrag(event)) {
            return;
          }
          return element.addClass("drag");
        });
        element.on("dragleave", function(event) {
          event.preventDefault();
          return element.removeClass("drag");
        });
        element.on("dragover", function(event) {
          return event.preventDefault();
        });
        return element.on("drop", function(event) {
          var file, uploads;
          event.preventDefault();
          if (!isFileDrag(event)) {
            return false;
          }
          uploads = (function() {
            var _i, _len, _ref, _results;
            _ref = event.dataTransfer.files;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              file = _ref[_i];
              _results.push(Media.add("/" + (attrs.folder || 'uploads') + "/" + file.name, file));
            }
            return _results;
          })();
          return $q.all(uploads).then(function(uploads) {
            return scope.callback(uploads);
          });
        });
      },
      template: '<div class="timespace-dropzone">\n    <p>Drag files here to add file downloads</p>\n</div>'
    };
  }).directive('timespaceLinks', function() {
    return {
      restrict: 'E',
      replace: true,
      scope: {
        field: "="
      },
      controller: function($scope) {
        $scope.link = {};
        $scope.uploads = [];
        $scope.add = function(url, label, upload) {
          var item, _base;
          if (!(url || $scope.link.url && label || $scope.link.label)) {
            return;
          }
          item = {
            url: url || $scope.link.url,
            label: label || $scope.link.label
          };
          (_base = $scope.field).value || (_base.value = []);
          $scope.field.value.push(item);
          $scope.field.uploads.push(upload);
          $scope.link = {};
          return item;
        };
        $scope.remove = function(index) {
          var e, i, link, u, upload;
          link = $scope.field.value && $scope.field.value[index];
          upload = $scope.uploads[index];
          if (!link) {
            return;
          }
          if (upload) {
            Media.remove(upload.path);
          }
          $scope.field.value = (function() {
            var _i, _len, _ref, _results;
            _ref = $scope.field.value;
            _results = [];
            for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
              e = _ref[i];
              if (i !== index) {
                _results.push(e);
              }
            }
            return _results;
          })();
          return $scope.uploads = (function() {
            var _i, _len, _ref, _results;
            _ref = $scope.uploads;
            _results = [];
            for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
              u = _ref[i];
              if (i !== index) {
                _results.push(u);
              }
            }
            return _results;
          })();
        };
        $scope.rename = function(index) {
          var link, upload;
          link = $scope.field.value && $scope.field.value[index];
          upload = $scope.uploads[index];
          if (upload && link) {
            return $scope.uploads[index] = Media.mv(upload.path, link.url);
          }
        };
        return $scope.upload = function(uploads) {
          var upload, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = uploads.length; _i < _len; _i++) {
            upload = uploads[_i];
            $scope.uploads || ($scope.uploads = []);
            _results.push($scope.add(upload.path, upload.name, upload));
          }
          return _results;
        };
      },
      template: '<div class="timespace-links">\n  <div class="link-inputs" ng-repeat="link in field.value">\n    <input class="link-label" ng-model="link.label">\n    <input class="link-url" ng-model="link.url" ng-change="rename($index)">\n    <a class="link-remove-icon link-icon" ng-click="remove($index)" title="Remove this link"></a>\n  </div>\n  <div class="link-inputs">\n    <input class="link-label" ng-model="link.label" placeholder="Link label">\n    <input class="link-url" ng-model="link.url" placeholder="URL to link to" ng-blur="add()">\n    <a class="link-add-icon link-icon" ng-click="add()" title="Add new link"></a>\n  </div>\n  <timespace-dropzone callback="upload" folder="{{field.folder}}"></timespace-dropzone>\n</div>'
    };
  });

}).call(this);
